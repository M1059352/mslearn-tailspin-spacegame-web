trigger:
- '*'

pool:
<<<<<<< HEAD
<<<<<<< HEAD
  vmImage: 'ubuntu-16.04'
=======
  vmImage: 'ubuntu-18.04'
>>>>>>> ace63f7f22385c658aa9da8b719f8414e29a79b7
=======
  vmImage: 'ubuntu-18.04'
>>>>>>> master
  demands:
    - npm

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
<<<<<<< HEAD
<<<<<<< HEAD
  dotnetSdkVersion: '3.1.100'
=======
  dotnetSdkVersion: '3.1.300'
>>>>>>> ace63f7f22385c658aa9da8b719f8414e29a79b7
=======
  dotnetSdkVersion: '3.1.300'
>>>>>>> master

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

<<<<<<< HEAD
<<<<<<< HEAD
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 2.1.505 for SonarCloud'
  inputs:
    version: '2.1.505'

=======
>>>>>>> ace63f7f22385c658aa9da8b719f8414e29a79b7
=======
>>>>>>> master
- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false
<<<<<<< HEAD

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
=======

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
>>>>>>> ace63f7f22385c658aa9da8b719f8414e29a79b7
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()